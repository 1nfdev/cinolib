- add rendering of 2D textures 
- What I am currently doing in AbstractSurfaceMesh::edge_highlight_labeling_boundaries is wrong and should disappear. The right thing to do is to have a flag for edges, and a separate rendering session for flagged edges (for whatever reason)
- extend the concept of subdivisions from hexmesh to any mesh
- check the correct positioning of CINOLIB_USES_OPENGL (it should be only on files where open gl is directly included!)
- make cotangent weights robust against almost degenerate triangles
- make the uvw a vec3d and implement a set of methods to switch between xyz and uvw (this will make extremely easy to move a mesh from parametric to object space)
- add Additive Manufacturing stuff (load and process CLI files)…
- transform any function containing inner Trimesh<> or Tetmesh<> into a templated function  with generic Mesh type
- improve face tessellation strategy for polygonal meshes (flipped elements may currently arise for non convex polygons)
- add cylinder and spheres list (with colors, size and so forth) in the render list used for meshes, so that there will be only on unified rendering access point
- Transform timer in a profiler class with internal string to be printed at the end
  and summary of times spent in each function… (NOTE: it’s a tree!!!!!!)
- Refactor PointInsideMeshCache, it should return ALL the elements containing the
  query point and let the application choose the best one
- make a DrawableOctree (and visually test the octree)
- Add face IDs and vertex IDs!!!!! (like libigl)
- Bake a CurveNetwork class and use it for skeletons, gestures, sharp features 
  and coarse layouts
- Add cache for eigen solvers - avoid refactoring matrices multiple times
- Use robust geometric computations (volumes, dihedral angles ecc.) 
  (ref. => Lecture Notes on Geometric Robustness di Jonathan Richard Shewchuk)
- Add cotan laplacian  normalization
  (ref => https://www.ceremade.dauphine.fr/~peyre/teaching/manifold/tp4.html)
- Improve on mesh rendering (shaders, VBOs ecc)
- Add ambient occlusion (with/without floor)
- Copy/paste points of view
- remove dependency from libQGLViewer and use Qt3D instead(?)
- Add text box with debug messages
