- add segments color and condensate rendering in a single method rather than two
- Transform timer in a profiler class with internal string to be printed at the end
  and summary of times spent in each function… (NOTE: it’s a tree!!!!!!)
- Refactor PointInsideMeshCache, it should return ALL the elements containing the
  query point and let the application choose the best one
- make a DrawableOctree (and visually test the octree)
- Add face IDs and vertex IDs!!!!! (like libigl)
- Bake a CurveNetwork class and use it for skeletons, gestures, sharp features 
  and coarse layouts
- Add cache for eigen solvers - avoid refactoring matrices multiple times
- Use robust geometric computations (volumes, dihedral angles ecc.) 
  (ref. => Lecture Notes on Geometric Robustness di Jonathan Richard Shewchuk)
- Add cotan laplacian  normalization
  (ref => https://www.ceremade.dauphine.fr/~peyre/teaching/manifold/tp4.html)
- Improve on mesh rendering (shaders, VBOs ecc)
- Add ambient occlusion (with/without floor)
- delete double render pass e do everything in a single pass
- Copy/paste points of view
- Add text box with debug messages
- Add perspective/orthographic camera option, with field of view control (libQGLViewer has everything necessary)